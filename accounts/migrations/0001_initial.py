# Generated by Django 5.2.3 on 2025-06-20 07:25

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('manager', 'Menejer'), ('technical', 'Texnik xodim')], default='technical', max_length=20, verbose_name='Rol')),
                ('specialist_type', models.CharField(blank=True, choices=[('measurer', "O'lchov oluvchi"), ('manufacturer', 'Ishlab chiquvchi'), ('installer', "O'rnatuvchi"), ('universal', 'Universal (barchasi)')], help_text='Faqat texnik xodimlar uchun', max_length=20, null=True, verbose_name='Mutaxassis turi')),
                ('phone', models.CharField(blank=True, max_length=13, null=True, validators=[django.core.validators.RegexValidator(message='Telefon raqam formati: +998901234567', regex='^\\+?998\\d{9}$')], verbose_name='Telefon raqam')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name="Tug'ilgan kun")),
                ('can_create_order', models.BooleanField(default=False, help_text='Yangi buyurtma qabul qilish huquqi', verbose_name='Buyurtma yaratish')),
                ('can_measure', models.BooleanField(default=False, help_text="Mijoz uyiga borib o'lchov olish huquqi", verbose_name="O'lchov olish")),
                ('can_manufacture', models.BooleanField(default=False, help_text='Jalyuzilarni ishlab chiqarish huquqi', verbose_name='Ishlab chiqarish')),
                ('can_install', models.BooleanField(default=False, help_text="Jalyuzilarni o'rnatish huquqi", verbose_name="O'rnatish")),
                ('can_cancel_order', models.BooleanField(default=False, help_text='Buyurtmani bekor qilish huquqi', verbose_name='Buyurtmani bekor qilish')),
                ('can_manage_payments', models.BooleanField(default=False, help_text="To'lov qabul qilish va boshqarish huquqi", verbose_name="To'lovlarni boshqarish")),
                ('hire_date', models.DateField(blank=True, null=True, verbose_name='Ishga qabul qilingan sana')),
                ('salary', models.DecimalField(blank=True, decimal_places=2, help_text="Oylik maosh so'mda", max_digits=12, null=True, verbose_name='Maosh')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Manzil')),
                ('emergency_contact', models.CharField(blank=True, max_length=100, null=True, verbose_name='Favqulodda holat uchun aloqa')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Izohlar')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Yaratilgan sana')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Yangilangan sana')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Foydalanuvchi',
                'verbose_name_plural': 'Foydalanuvchilar',
                'ordering': ['-created_at'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
